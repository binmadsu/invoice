<?php class m_user extends CI_Model{	private $tbl_name = 'userinfo';		function addpage()	{		//pr($_POST);die;		$info_btn = $this->input->post('user[info-btn]');		$userinfo_btn = $this->input->post('userinfo[userinfo-btn]');		$billing_btn = $this->input->post('billing[billing-btn]');		$payment_btn = $this->input->post('payment[payment-btn]');		$network_btn = $this->input->post('network[network-btn]');		$docoment_btn = $this->input->post('docoment[docoment-btn]');		//$billing_btn = $this->input->post('billing-btn');								if($info_btn == 'Next'){				$priority = $this->get_length('userinfo');				$slug = url_title($this->input->post('user[username]'), 'dash', true);				$serviceslug = $this->checkSlugExists($slug, 'userinfo');								$data = array(				'slug' => $serviceslug,				'username' => $this->input->post('user[username]'),				'portalloginpassword' => $this->input->post('user[portalloginpassword]'),				'zone' => $this->input->post('user[zone]'),				'plan_id' => $this->input->post('planname'),				'lco' => $this->input->post('user[lco]'),				'distributer' => $this->input->post('user[distributer]'),				'bussiness_Partner' => $this->input->post('user[bussiness_Partner]'),				'leadsource' => $this->input->post('user[leadsource]'),				'connection_type' => $this->input->post('user[connection_type]'),				'servicetype' => $this->input->post('user[servicetype]'),				'is_active' => 1,				'priority' => $priority,			);			//echo'<pre>';print_r($data);echo'</pre>';die;			$msg = 0;			$this->db->insert('userinfo', $data);			$lastId = $this->db->insert_id();			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? $lastId : 0; //for insert			return $msg;		}						if($userinfo_btn == 'Next'){			$priority = $this->get_length('userinfo');			$username = $this->input->post('userinfo[username]');			$data = array(				'firstname' => $this->input->post('userinfo[firstname]'),				'lastname' => $this->input->post('userinfo[lastname]'),				'email' => $this->input->post('userinfo[email]'),				'company' => $this->input->post('userinfo[company]'),				'mobilephone' => $this->input->post('userinfo[mobilephone]'),				'address' => $this->input->post('userinfo[address]'),				'city' => $this->input->post('city'),			    'state' => $this->input->post('state'),			    'country' => $this->input->post('country'),				'usertype' => $this->input->post('userinfo[usertype]'),				'authtype' => $this->input->post('userinfo[authtype]'),			);			//echo'<pre>';print_r($data);echo'</pre>';die;			$msg = 0;			$this->db->update('userinfo', $data);			$this->db->where('username', $username);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 1 : 0; //for insert			return $msg;		}								if($billing_btn == 'Next'){				$data = array(				'username' => $this->input->post('billing[username]'),				'plan_id' => $this->input->post('planname'),				'hotspot_id' => $this->input->post('billing[hotspot_id]'),				'hotspotlocation' => $this->input->post('billing[hotspotlocation]'),				'contactperson' => $this->input->post('billing[contactperson]'),				'company' => $this->input->post('billing[company]'),				'email' => $this->input->post('billing[email]'),				'phone' => $this->input->post('billing[phone]'),				'address' => $this->input->post('billing[address]'),				'phone' => $this->input->post('billing[phone]'),				'city' => $this->input->post('city'),			    'state' => $this->input->post('state'),			    'country' => $this->input->post('country'),				'zip' => $this->input->post('billing[zip]'),				'lastbill' => $this->input->post('billing[lastbill]'),				'nextbill' => $this->input->post('billing[nextbill]'),				'nextinvoicedue' => $this->input->post('billing[nextinvoicedue]'),				'billdue' => $this->input->post('billing[billdue]'),				'postalinvoice' => $this->input->post('billing[postalinvoice]'),				'emailinvoice' => $this->input->post('billing[emailinvoice]'),				'batch_id' => $this->input->post('billing[batch_id]'),					);			//echo'<pre>';print_r($data);echo'</pre>';die;			$msg = 0;			$this->db->insert('userbillinfo', $data);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 1 : 0; //for insert			return $msg;		}						if($payment_btn == 'Next'){				$data = array(				'paymentmethod' => $this->input->post('payment[paymentmethod]'),				'cash' => $this->input->post('payment[cash]'),				'creditcardname' => $this->input->post('payment[creditcardname]'),				'creditcardnumber' => $this->input->post('payment[creditcardnumber]'),				'creditcardverification' => $this->input->post('payment[creditcardverification]'),				'creditcardtype' => $this->input->post('payment[creditcardtype]'),				'changeuserbillinfo' => $this->input->post('payment[changeuserbillinfo]'),				'installtion_amount' => $this->input->post('payment[installtion_amount]'),				'setup_charges' => $this->input->post('payment[setup_charges]'),				'lead' => $this->input->post('payment[lead]'),				'coupon' => $this->input->post('payment[coupon]'),				'ordertaker' => $this->input->post('payment[ordertaker]'),				'billstatus' => $this->input->post('payment[billstatus]'),			);			//echo'<pre>';print_r($data);echo'</pre>';die;			$msg = 0;			$this->db->update('userbillinfo', $data);			$this->db->where('username', $username);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 1 : 0; //for insert			return $msg;		}			if($network_btn == 'Next'){				$data = array(				'username' => $this->input->post('network[username]'),				'static_ip' => $this->input->post('network[static_ip]'),				'mac_bind' => $this->input->post('network[mac_bind]'),				'option82' => $this->input->post('network[option82]'),				'pool_name' => $this->input->post('network[pool_name]'),				'nasport_bind' => $this->input->post('network[nasport_bind]'),				'option82_bind' => $this->input->post('network[option82_bind]'),				'mac' => $this->input->post('network[mac]'),				'nasport_id' => $this->input->post('network[nasport_id]'),				'option82_string' => $this->input->post('network[option82_string]'),			);			//echo'<pre>';print_r($data);echo'</pre>';die;			$msg = 0;			$this->db->insert('tbl_network_doc', $data);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 1 : 0; //for insert			return $msg;		}										if($docoment_btn == 'Next'){				$data = array(				'id_proof' => $this->input->post('docoment[id_proof]'),				'installation_time' => $this->input->post('docoment[installation_time]'),			);			//echo'<pre>';print_r($data);echo'</pre>';die;			$msg = 0;			$this->db->update('tbl_network_doc', $data);			$this->db->where('username', $username);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 1 : 0; //for insert			return $msg;		}					}				//function listing($limit,$start,$startdate,$enddate,$specificOption,$specificValue)	function listing($limit,$start)	{		$this->db->select('*');		$this->db->from($this->tbl_name);		$this->db->limit($limit, $start);		$this->db->order_by('priority','asc');		$query = $this->db->get();		//echo $this->db->last_query();die;		return $query->result_array();	}				  function index()	{		//pr($_POST);die;		$info_btn = $this->input->post('user[info-btn]');		$userinfo_btn = $this->input->post('userinfo[userinfo-btn]');		$billing_btn = $this->input->post('billing[billing-btn]');		$payment_btn = $this->input->post('payment[payment-btn]');		$network_btn = $this->input->post('network[network-btn]');		$docoment_btn = $this->input->post('docoment[docoment-btn]');			if($info_btn == 'Next'){			$data = array(			   'username' => $this->input->post('user[username]'),				'portalloginpassword' => $this->input->post('user[portalloginpassword]'),				'zone' => $this->input->post('user[zone]'),				'plan' => $this->input->post('user[plan]'),				'lco' => $this->input->post('user[lco]'),				'distributer' => $this->input->post('user[distributer]'),				'bussiness_Partner' => $this->input->post('user[bussiness_Partner]'),				'leadsource' => $this->input->post('user[leadsource]'),				'connection_type' => $this->input->post('user[connection_type]'),				'servicetype' => $this->input->post('user[servicetype]'),		);		// echo'<pre>';print_r($data);echo'</pre>';die;		$msg = 0;		if( $id == 0 ){			$this->db->insert($this->tbl_name, $data);			$msg = ($this->db->affected_rows() > 0) ? 1 : 0;//for insert		}else{			$this->db->where('username',$username );		    $this->db->update($this->tbl_name, $data);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 2 : 3;//for update : for nothing happened		}		return $msg;	}					if ($userinfo_btn == 'Next'){			$data = array(			    'firstname' => $this->input->post('userinfo[firstname]'),				'lastname' => $this->input->post('userinfo[lastname]'),				'email' => $this->input->post('userinfo[email]'),				'company' => $this->input->post('userinfo[company]'),				'mobilephone' => $this->input->post('userinfo[mobilephone]'),				'address' => $this->input->post('userinfo[address]'),				'city' => $this->input->post('userinfo[city]'),				'country' => $this->input->post('userinfo[country]'),				'mac_bind' => $this->input->post('userinfo[mac_bind]'),				'nasport_bind' => $this->input->post('userinfo[nasport_bind]'),				'option82_bind' => $this->input->post('userinfo[option82_bind]'),				'mac' => $this->input->post('userinfo[mac]'),				'nasport_id' => $this->input->post('userinfo[nasport_id]'),				'option82_string' => $this->input->post('userinfo[option82_string]'),				'usertype' => $this->input->post('userinfo[usertype]'),				'authtype' => $this->input->post('userinfo[authtype]'),		);		// echo'<pre>';print_r($data);echo'</pre>';die;		$msg = 0;		if( $id == 0 ){			$this->db->insert($this->tbl_name, $data);			$msg = ($this->db->affected_rows() > 0) ? 1 : 0;//for insert		}else{			$this->db->where('username',$username );		    $this->db->update($this->tbl_name, $data);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 2 : 3;//for update : for nothing happened		}		return $msg;	}						if ($billing_btn == 'Next'){			$data = array(			    'username' => $this->input->post('billing[username]'),				'hotspot_id' => $this->input->post('billing[hotspot_id]'),				'hotspotlocation' => $this->input->post('billing[hotspotlocation]'),				'contactperson' => $this->input->post('billing[contactperson]'),				'company' => $this->input->post('billing[company]'),				'email' => $this->input->post('billing[email]'),				'phone' => $this->input->post('billing[phone]'),				'address' => $this->input->post('billing[address]'),				'phone' => $this->input->post('billing[phone]'),				'city' => $this->input->post('billing[city]'),				'state' => $this->input->post('billing[state]'),				'zip' => $this->input->post('billing[zip]'),				'country' => $this->input->post('billing[country]'),				'lastbill' => $this->input->post('billing[lastbill]'),				'nextbill' => $this->input->post('billing[nextbill]'),				'nextinvoicedue' => $this->input->post('billing[nextinvoicedue]'),				'billdue' => $this->input->post('billing[billdue]'),				'postalinvoice' => $this->input->post('billing[postalinvoice]'),				'emailinvoice' => $this->input->post('billing[emailinvoice]'),				'batch_id' => $this->input->post('billing[batch_id]'),				);		// echo'<pre>';print_r($data);echo'</pre>';die;		$msg = 0;		if( $id == 0 ){			$this->db->insert('userbillinfo', $data);			$msg = ($this->db->affected_rows() > 0) ? 1 : 0;//for insert		}else{			$this->db->where('username',$username );		    $this->db->update('userbillinfo', $data);			//echo $this->db->last_query();die;			$msg = ($this->db->affected_rows() > 0) ? 2 : 3;//for update : for nothing happened		}		return $msg;	}		}			/* function randomUsername($id, $tbl_name){		$this->db->select('*');		$this->db->from($this->tbl_name);		$this->db->limit($limit, 0,1);		$this->db->order_by('desc');		$query = $this->db->get();		return $randomUsername;	}   */			function checkSlugExists($slug, $tbl_name){		$serviceslug = '';		$query = $this->db->query("select * from ".$tbl_name." where slug='".$slug."'");		$count = $query->num_rows();		// if slug pre exists		if ($count > 0) {			$id=rand(10000,99999);  			$shorturl=base_convert($id,20,36);			$serviceslug = $slug.$shorturl;			return $serviceslug;		}else		return $slug;	}		function delete($pageid){		$this->db->delete($this->tbl_name, array('id' => $pageid));		return ($this->db->affected_rows() != 1) ? false : true;  	}					function status($id,$status){		$this->db->where('id',$id );        $this->db->set("is_active", $status);        $this->db->update($this->tbl_name);		//$this->output->enable_profiler(TRUE);		return ($this->db->affected_rows() > 0) ? 2 : 0;//for insert // for update  	}			//function count_all($startdate,$enddate,$specificOption,$specificValue){  	function count_all(){		$this->db->select('*');		/*if(!isEmpty($specificOption) && !isEmpty($specificValue)){		   $this->db->like($specificOption,$specificValue);		}*/		$query = $this->db->get($this->tbl_name);		return ($query->num_rows());	}			function page_info($id=0){		$this->db->select('*');		$this->db->from($this->tbl_name);		if(!empty($id)){			$this->db->where('id',$id);		}		$query = $this->db->get();		return $query->result_array();	}			function Updatepriority($id,$priority)	{		$this->db->where('id',$id );        $this->db->set("priority", $priority);        $this->db->update($this->tbl_name);		//$this->output->enable_profiler(TRUE);		//return ($this->db->affected_rows() > 0) ? 2 : 0;//for insert // for update	}			function get_length($tbl_name){		$this->db->select('*');		$this->db->from($tbl_name);		$query = $this->db->get();		return count($query->result_array())+1;	}		function Getplan(){		$query = $this->db->get('billing_plans');		$role[''] = "Select Plan*";		foreach($query->result() as $row){			$role[$row->id] =  ucfirst($row->planName);		}		return $role;	}}?>