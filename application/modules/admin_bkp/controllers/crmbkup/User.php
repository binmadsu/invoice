<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class user extends CI_Controller{	public function __construct(){	    parent::__construct();	    is_logged_in();	    $this->load->model('m_user');	}	public function index(){				$data = array();		$data['plan'] = $this->m_user->Getplan();		$this->load->helper(array('form'));	    $this->load->library('form_validation');		if($_SERVER['REQUEST_METHOD'] == 'POST')		{			//pr($_POST);die;			$info_btn = $this->input->post('user[info-btn]');			//echo " == $info_btn == ";die;			if($info_btn == 'Next'){				$this->form_validation->set_rules('user[username]', 'User Name', 'required');				$this->form_validation->set_rules('user[portalloginpassword]', 'Password', 'required');			}						if($this->form_validation->run() == true)	   		{				$insertedid = $this->m_user->addpage();				$this->session->set_flashdata('msg', 'Record added successfully!');				redirect('admin/user/edit/'.$insertedid, 'refresh');			}	 	}	 	//pr($data);die;		$data['countries'] = getCountries();		$data['username'] = randomUsername();	   	$this->load->view('user/add_view',$data);	}				function listing($offset=0){		$this->load->helper('form');		$limit = pagination_count;		//echo $limit;		$data['datarows'] = $this->m_user->listing($limit,$offset);		$config['total_rows'] = $this->m_user->count_all();				/* pagination start */		$this->load->library('pagination');		//$search_parameter="/$startdate/$enddate/$specificOption/$specificValue";		//$config['first_url'] = site_url("admin/banner/listing/0/".$search_parameter);		//$config['suffix']= $search_parameter;		$config['first_url'] = site_url("admin/user/listing/0/");		$config['base_url'] = site_url("admin/user/listing/");		$config['per_page'] = $limit; 		$config['uri_segment'] = 4;		$this->pagination->initialize($config);		$data["links"] = $this->pagination->create_links();		$data['page'] = $offset;		/*******/		$this->load->view('user/view_list',$data);	}							//edit pages	function edit($id)	{		$data = array();		$data['plan'] = $this->m_user->Getplan();			$this->load->library('form_validation');				$info_btn = $this->input->post('user[info-btn]');		if($info_btn == 'Next'){				$this->form_validation->set_rules('user[username]', 'User Name', 'required');				$this->form_validation->set_rules('user[portalloginpassword]', 'Password', 'required');			}						$userinfo_btn = $this->input->post('userinfo[userinfo-btn]');			if($userinfo_btn == 'Next'){				$this->form_validation->set_rules('user[username]', 'User Name', 'required');				$this->form_validation->set_rules('userinfo[firstname]', 'First Name', 'required');				$this->form_validation->set_rules('userinfo[lastname]', 'Last Name', 'required');			}			$billing_btn = $this->input->post('billing[billing-btn]');			if($billing_btn == 'Next'){				//pr($_POST);die;				$this->form_validation->set_rules('billing[username]', 'User Name', 'required');				$this->form_validation->set_rules('billing[company]', 'Company', 'required');			}						$payment_btn = $this->input->post('payment[payment-btn]');			if($payment_btn == 'Next'){				//pr($_POST);die;				$this->form_validation->set_rules('billing[username]', 'User Name', 'required');				$this->form_validation->set_rules('payment[creditcardtype]', 'Credit Card Type', 'required');				$this->form_validation->set_rules('payment[cash]', 'Cash', 'required');			}						$network_btn = $this->input->post('network[network-btn]');			if($network_btn == 'Next'){				$this->form_validation->set_rules('network[username]', 'username ', 'required');				$this->form_validation->set_rules('network[static_ip]', 'static_ip', 'required');				}						$docoment_btn = $this->input->post('docoment[docoment-btn]');			if($docoment_btn == 'Next'){				$this->form_validation->set_rules('network[username]', 'username ', 'required');				$this->form_validation->set_rules('docoment[id_proof]', 'id_proof', 'required');				$this->form_validation->set_rules('docoment[installation_time]', 'installation_time', 'required');			}	    	if($this->form_validation->run() == true)		    {				//pr($_POST);die;				$insertedid = $this->m_user->index($id,$data);				if(!empty($insertedid)){				   $this->session->set_flashdata('msg', 'Record Updated successfully');				}				$userid = $this->uri->segment(4);				redirect('admin/user/edit/'.$userid, 'refresh');				//redirect('/admin/user/listing/'.$page.'/');			}else{				$data['datarows'] = $this->m_user->page_info($id);				$data['billingrows'] = $this->m_user->billing_info($id);				$data['paymentrows'] = $this->m_user->payment_info($id);				$data['networkrows'] = $this->m_user->network_info($id);				$data['docomentrows'] = $this->m_user->docoment_info($id);				$country_id = isset($data['datarows'][0]['country'])?$data['datarows'][0]['country']:0;				$state_id = isset($data['datarows'][0]['state'])?$data['datarows'][0]['state']:0;				$city_id = isset($data['datarows'][0]['city'])?$data['datarows'][0]['city']:0;				$data['countries'] = getCountries();				$data['states'] = getStates($country_id);				$data['cities'] = getCities($state_id);				 //				 //pr($data);die;				$this->load->view('user/edit_view',$data);		}	}					function delete($pageid){		if($this->m_user->delete($pageid))			$this->session->set_flashdata('msg', 'Record Deleted successfully');		redirect('/admin/user/listing/','refresh');	}					function status($id,$status){		if($this->m_user->status($id,$status))			$this->session->set_flashdata('msg', 'Record Updated successfully');		redirect('/admin/user/listing/','refresh');	}					function priority()	{		$id=$_GET['id'];		$priority=$_GET['p'];		$this->m_user->Updatepriority($id,$priority);	}		 function userdetails($id=0)	{				$data['datarows'] = $this->m_user->page_info($id);        //pr($data);die;		$this->load->view('user/userdetails',$data);	} 	}