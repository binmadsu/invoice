<?php //echo '<pre>';print_r($query->result());exit;class m_setting extends CI_Model{		private $tblname = 'tbl_setting';	public function __construct(){		parent::__construct();	} 	public function loadSettings($id=1){		$msg = 0;		// 		if($_SERVER['REQUEST_METHOD'] == 'POST'){			$site_logo = $this->uploadBannerImage('site_logo');			//$site_footer_logo = '';//$this->uploadBannerImage('site_footer_logo');			$address1=html_entity_decode($this->input->post('address1'));			//$home_text1=html_entity_decode($this->input->post('home_text1'));			//if($site_logo or $site_footer_logo){			if($site_logo){				$data1 = array();$data2 = array();$data3 = array();				if($site_logo){					$data1 = array(						'site_logo' => $site_logo					);				}				/*if($site_footer_logo){					$data2 = array(						'site_footer_logo' => $site_footer_logo					);				}*/				$data3 = array(					'admin_email' => $this->input->post('admin_email'),					'company_phone1' => $this->input->post('company_phone1'),					'company_phone2' => $this->input->post('company_phone2'),					'facebook_link' => $this->input->post('facebook_link'),					'twitter_link' => $this->input->post('twitter_link'),					'pinterest_link' => $this->input->post('pinterest_link'),					'linkedin_link' => $this->input->post('linkedin_link'),					'instagram_link' => $this->input->post('instagram_link'),					'google_plus_link' => $this->input->post('google_plus_link'),					'youtube_link' => $this->input->post('youtube_link'),					'address1' => $address1,					//'office_timings' => $this->input->post('office_timings'),					//'home_text1' => $home_text1,				);				$data = array_merge($data1,$data2,$data3);			}			else{				$data = array(					'admin_email' => $this->input->post('admin_email'),					'company_phone1' => $this->input->post('company_phone1'),					'company_phone2' => $this->input->post('company_phone2'),					'facebook_link' => $this->input->post('facebook_link'),					'twitter_link' => $this->input->post('twitter_link'),					'pinterest_link' => $this->input->post('pinterest_link'),					'linkedin_link' => $this->input->post('linkedin_link'),					'instagram_link' => $this->input->post('instagram_link'),					'google_plus_link' => $this->input->post('google_plus_link'),					'youtube_link' => $this->input->post('youtube_link'),					'address1' => $address1,					//'home_text1' => $home_text1,				);			}			//echo '<pre>';print_r($data);die;			$this->db->where('id',$id );			$this->db->update('tbl_setting', $data);			$msg = ($this->db->affected_rows() > 0) ? 1 : '';//for update : for nothing happened			return $msg;		}		else{			$strQuery = "SELECT * FROM tbl_setting WHERE id =$id";			$query = $this->db->query($strQuery);			if ($query->num_rows() > 0)			{			   	$data = $query->row();			   	//echo '<pre>';print_r($data);die;				return $data;			}		} 	} 	public function uploadBannerImage($image)	{		$time = time();		if($image == 'site_logo')			$url = 'assets/sitelogo/'.$time."_".$_FILES[$image]['name'];		else			$url = 'assets/setting-images/'.$time."_".$_FILES[$image]['name'];	 	//extensive suitability check before doing anything with the file...	    if (($_FILES[$image] == "none") || (empty($_FILES[$image]['name'])) )	    {	       $message = "No file uploaded.";	       $url  = '';	    }	    else if ($_FILES[$image]["size"] == 0)	    {	       $message = "The file is of zero length.";$url  = '';	    }	    else if (!is_uploaded_file($_FILES[$image]["tmp_name"]))	    {	       $message = "You may be attempting to hack our server. We're on to you; expect a knock on the door sometime soon.";	       $url  = '';	    }	    else {	      $message = "";	      $move = @ move_uploaded_file($_FILES[$image]['tmp_name'], $url);	      if(!$move)	      {	         $message = "Error moving uploaded file. Check the script is granted Read/Write/Modify permissions.";	         $url  = '';	      }	    }	    return $url;	}	function getSettingbyField	($id=1,$field='admin_email'){		$query = $this->db->query("SELECT $field FROM `tbl_setting` WHERE id =$id");		if ($query->num_rows() > 0)		{			$row = $query->row()->$field;			//pr($row);			return $row;		}	}    function email_templates(){		$query = $this->db->get('tbl_email_templates');		$role[''] = "Select Template";		foreach($query->result() as $row){			$role[$row->id] =  ucfirst($row->name);		}		return $role;	}		function email_templates_detail($id){		$query = $this->db->get_where('tbl_email_templates',array('id'=>$id))->row();		return $query;	}		function edit_email(){		$msg = 0;			//pr($_POST); die;		if($_SERVER['REQUEST_METHOD'] == 'POST'){			$text=str_replace("\'","'",$this->input->post('content'));			$data = array(				'from' => $this->input->post('from'),				'subject' => $this->input->post('subject'),				'email_text_content' => $text,			);			$this->db->where('id',$this->input->post('email_id') );			$this->db->update('tbl_email_templates', $data);			$msg = ($this->db->affected_rows() > 0) ? 1 : '';			return $msg;		}	}	function selectEmailTemplate($template){		$query = $this->db->get_where('tbl_email_templates',array('alias'=>$template))->row();		return $query;	}	/*function sendMail($to,$email_template,$replace_word,$default){		$default_content = array(			'##SITE_NAME##' => 'Marriage Tickets',			'##SITE_URL##' => base_url(),		);		$emailFindReplace = array_merge($default_content, $replace_word);				$message = strtr($email_template->email_text_content, $emailFindReplace);		$subject = strtr($email_template->subject, $emailFindReplace);		$from= strtr($email_template->from, $emailFindReplace);		$this->load->library('email'); 		$config['charset'] = 'iso-8859-1';		$config['wordwrap'] = TRUE;		$config['mailtype'] = 'html';		$this->email->initialize($config);		$this->email->from($from, 'Ideal Orient');		$this->email->to($to);		$this->email->subject($subject);		$this->email->message($message);		$this->email->send();		$this->email->clear(TRUE);	}*/	function sendMail($to,$email_template,$replace_word,$msg=''){		$default_content = array(			'##SITE_NAME##' => 'Marriage Tickets',			'##SITE_URL##' => base_url(),		);		$emailFindReplace = array_merge($default_content, $replace_word);		//pr($emailFindReplace);		//echo $to;die;		$message = strtr($email_template->email_text_content, $emailFindReplace);		$message = mailerTemplate($message);		$message .= $msg;		$subject = strtr($email_template->subject, $emailFindReplace);		$from = strtr($email_template->from, $emailFindReplace);		$this->load->library('email');		$config['charset'] = 'iso-8859-1';		$config['wordwrap'] = TRUE;		$config['mailtype'] = 'html';		$this->email->initialize($config);		$this->email->from($from, 'Ideal Orient');		$this->email->to($to);		$this->email->subject($subject);		$this->email->message($message);		$this->email->send();		$this->email->clear(TRUE);	}	function selectPageTemplate($slug){		$query = $this->db->get_where('tbl_pages',array('slug'=>$slug))->row();		return $query;	}	function edit_page(){		$msg = 0;		//pr($_POST);die;		if($_SERVER['REQUEST_METHOD'] == 'POST'){			$data = array(				'meta_title' => $this->input->post('meta_title'),				'meta_description' => $this->input->post('meta_description'),				'keyword' => $this->input->post('keyword'),				'content' => $this->input->post('content'),				);			$this->db->where('id',$this->input->post('page_id') );			$this->db->update('tbl_pages', $data);			$msg = ($this->db->affected_rows() > 0) ? 1 : '';			return $msg;		}	}	}